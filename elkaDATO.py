from tkinter import *
from tkinter import ttk
from tkinter import filedialog
from tkinter import messagebox as msg
import os
import sys

tk = Tk()

tk.title("–®–∏—Ñ—Ä–æ–≤—â–∏–∫ elkaDATO")
tk["bg"] = "#ffe993"
tk.minsize(400,300)
tk.maxsize(400,300)

paths = ["sample.doc"]
encode = ["utf-8"]


def file_create():
    if not text_zone.edit_modified():      
        text_zone.delete('1.0', END)
    else:        
        save_file_as()
          
        text_zone.delete('1.0', END)  
    
    text_zone.edit_modified(0) 

def open_file():
    if not text_zone.edit_modified():       
            try:            
                path = filedialog.askopenfile(filetypes = (("–®–∏—Ñ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ –ù–æ–≤–æ–π –ò–º–ø–µ—Ä–∏–∏ –Å–ª–æ–∫", "*.ffne"),("–í—Å–µ —Ñ–∞–π–ª—ã", "*.*"))).name

                paths.clear()
                paths.append(path)       
            
                with open(paths[0], 'r', encoding=encode[0]) as f:             
                    content = f.read()
                    text_zone.delete('1.0', END)
                    text_zone.insert('1.0', content)
                                
                    text_zone.edit_modified(0)

                tk.title('–û—Ç–∫—Ä—ã—Ç —à–∏—Ñ—Ä - ' + paths[0])
             
            except UnicodeDecodeError:
                msg.showwarning(title="–û—à–∏–±–∫–∞!", message="–£–ø—Å! –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π. –§–∞–π–ª –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç –≤ –∫–æ–¥–∏—Ä–æ–≤–∫–µ Utf 8, –ø–æ—Å–ª–µ —á–µ–≥–æ –æ–Ω–∞ –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞ –º–µ—Å—Ç–æ –ø—Ä–æ—à–ª–æ–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–∏.")
                encode[0] = "utf-8"

                try:
                
                   with open(paths[0], 'r', encoding=encode[0]) as f:             
                       content = f.read()
                       text_zone.delete('1.0', END)
                       text_zone.insert('1.0', content)
                                   
                       text_zone.edit_modified(0)

                   tk.title('–û—Ç–∫—Ä—ã—Ç —Ñ–∞–π–ª - ' + paths[0])
                   
                except UnicodeDecodeError:
                   msg.showwarning(title="–û—à–∏–±–∫–∞!", message="–£–ø—Å! –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π Utf 8. –ü–æ—Ö–æ–∂–µ, –æ–Ω –ø–æ–≤—Ä–µ–∂–¥—ë–Ω –∏–ª–∏ —Ñ–∞–π–ª –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")
            except LookupError:
                   msg.showwarning(title="–û—à–∏–±–∫–∞!", message="–£–ø—Å! –í—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –∫–æ–¥–∏—Ä–æ–≤–∫—É –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞! –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π –±—É–¥–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ Utf 8")

                   encode[0] = "utf-8"
                   
    else:   
            save_file_as()
        
            text_zone.edit_modified(0)              
            open_file()

def save_file():
    if paths[0] != '':
        
        with open(paths[0], 'w', encoding=encode[0]) as f:
            content = text_zone.get('1.0', END)
            f.write(content)

        tk.title('–°–æ—Ö—Ä–∞–Ω—ë–Ω –ø–æ –ø—É—Ç–∏ - ' + paths[0])
      
    else:
        save_file_as()   

def save_file_as():
    try:

        paths.clear()
        path = filedialog.asksaveasfile(filetypes = (("–®–∏—Ñ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ –ù–æ–≤–æ–π –ò–º–ø–µ—Ä–∏–∏ –Å–ª–æ–∫", "*.ffne"),("–í—Å–µ —Ñ–∞–π–ª—ã", "*.*"))).name

        if not "." in path:
            path = path + ".ffne"
        paths.append(path)
            
        tk.title('–°–æ—Ö—Ä–∞–Ω—ë–Ω –ø–æ –ø—É—Ç–∏ - ' + paths[0])
    
    except:
        return   
    
    with open(path, 'w', encoding=encode[0]) as f:
        f.write(text_zone.get('1.0', END))

def shiphering():
    text = text_zone.get("1.0", END)

    text = text.upper()

    text = text.replace("–Å", " ËÅñË™ïÊ®π ")
    text = text.replace("–õ", " ÊùæÊ®π ")
    text = text.replace("–ö", " Â∏ùÂúã ")
    
    text = text.replace("–ê", " –Å–ª–∫–∞ ")
    text = text.replace("–ë", " —ë–õ–∫–∞ ")
    text = text.replace("–í", " —ë–ª–ö–∞ ")
    text = text.replace("–ì", " —ë–ª–∫–ê ")
    text = text.replace("–î", " –Å–õ–∫–∞ ")
    text = text.replace("–ï", " –Å–ª–ö–∞ ")
    text = text.replace("–ñ", " –Å–ª–∫–ê ")
    text = text.replace("–ó", " —ë–õ–ö–∞ ")
    text = text.replace("–ò", " —ë–õ–∫–ê ")
    text = text.replace("–ô", " —ë–ª–ö–ê ")
    text = text.replace("–ú", " –ï–ª–∫–∞ ")
    text = text.replace("–ù", " –Å–õ–ö–∞ ")
    text = text.replace("–û", " –Å–õ–∫–ê ")
    text = text.replace("–ü", " –Å–ª–ö–ê ")
    text = text.replace("–†", " –Å–õ–ö–ê ")
    text = text.replace("–°", " —ë–ª–∫–∞ ")

    
    text = text.replace("–©", " —Å–æ—Å–Ω–∞ ")
    text = text.replace("–™", " –°–æ—Å–Ω–∞ ")
    text = text.replace("–´", " —Å–û—Å–Ω–∞ ")
    text = text.replace("–¨", " —Å–æ–°–Ω–∞ ")
    text = text.replace("–≠", " —Å–æ—Å–ù–∞ ")
    text = text.replace("–Æ", " —Å–æ—Å–Ω–ê ")
    text = text.replace("–Ø", " –°–û—Å–Ω–∞ ")

    text = text.replace("–¢", " –µ–ª—å ")
    text = text.replace("–£", " –ï–ª—å ")
    text = text.replace("–§", " –µ–õ—å ")
    text = text.replace("–•", " –µ–ª–¨ ")
    text = text.replace("–¶", " –ï–õ—å ")
    text = text.replace("–ß", " –ï–ª–¨ ")
    text = text.replace("–®", " –µ–õ–¨ ")

    text = text.replace("0", " üå≤üå≤ ")
    text = text.replace("1", " üéÑüéÑ ")
    text = text.replace("2", " üå≤üéÑüå≤ ")
    text = text.replace("3", " üå≤üéÑüéÑ ")
    text = text.replace("4", " üéÑüå≤üéÑ ")
    text = text.replace("5", " üå≤üå≤üå≤ ")


    text = text.replace("6", " üéÑüéÑüéÑ ")
    text = text.replace("7", " üéÑüéÑüå≤ ")
    text = text.replace("8", " üå≤üéÑüå≤üéÑ ")
    text = text.replace("9", " üéÑüå≤üéÑüå≤ ")

    text_zone.delete('1.0', END)
    text_zone.insert('1.0', text)
    

def deshiphering():
    text = text_zone.get("1.0", END)

    text = text.replace("ËÅñË™ïÊ®π", " –Å ")
    text = text.replace("ÊùæÊ®π", " –õ ")
    text = text.replace("Â∏ùÂúã", " –ö ")


    text = text.replace("üå≤üéÑüå≤üéÑ", " 8 ")
    text = text.replace("üéÑüå≤üéÑüå≤", " 9 ")
    
    text = text.replace("üå≤üéÑüå≤", " 2 ")
    text = text.replace("üå≤üéÑüéÑ", " 3 ")
    text = text.replace("üéÑüå≤üéÑ", " 4 ")
    text = text.replace("üå≤üå≤üå≤", " 5 ")


    text = text.replace("üéÑüéÑüéÑ", " 6 ")
    text = text.replace("üéÑüéÑüå≤", " 7 ")
    

    text = text.replace("üå≤üå≤", " 0 ")
    text = text.replace("üéÑüéÑ", " 1 ")

    text = text.replace("—Å–æ—Å–Ω–∞", " –© ")
    text = text.replace("–°–æ—Å–Ω–∞", " –™ ")
    text = text.replace("—Å–û—Å–Ω–∞", " –´ ")
    text = text.replace("—Å–æ–°–Ω–∞", " –¨ ")
    text = text.replace("—Å–æ—Å–ù–∞", " –≠ ")
    text = text.replace("—Å–æ—Å–Ω–ê", " –Æ ")
    text = text.replace("–°–û—Å–Ω–∞", " –Ø ")

    text = text.replace("–µ–ª—å", " –¢ ")
    text = text.replace("–ï–ª—å", " –£ ")
    text = text.replace("–µ–õ—å", " –§ ")
    text = text.replace("–µ–ª–¨", " –• ")
    text = text.replace("–ï–õ—å", " –¶ ")
    text = text.replace("–ï–ª–¨", " –ß ")
    text = text.replace("–µ–õ–¨", " –® ")

    text = text.replace("–Å–ª–∫–∞", " –ê ")
    text = text.replace("—ë–õ–∫–∞", " –ë ")
    text = text.replace("—ë–ª–ö–∞", " –í ")
    text = text.replace("—ë–ª–∫–ê", " –ì ")
    text = text.replace("–Å–õ–∫–∞", " –î ")
    text = text.replace("–Å–ª–ö–∞", " –ï ")
    text = text.replace("–Å–ª–∫–ê", " –ñ ")
    text = text.replace("—ë–õ–ö–∞", " –ó ")
    text = text.replace("—ë–õ–∫–ê", " –ò ")
    text = text.replace("—ë–ª–ö–ê", " –ô ")
    text = text.replace("–ï–ª–∫–∞", " –ú ")
    text = text.replace("–Å–õ–ö–∞", " –ù ")
    text = text.replace("–Å–õ–∫–ê", " –û ")
    text = text.replace("–Å–ª–ö–ê", " –ü ")
    text = text.replace("–Å–õ–ö–ê", " –† ")
    text = text.replace("—ë–ª–∫–∞", " –° ")    

    text_zone.delete('1.0', END)
    text_zone.insert('1.0', text)

def about():
    toplvl = Toplevel()

    toplvl.title("–û —à–∏—Ñ—Ä–æ–≤—â–∏–∫–µ elkaDATO")
    
    toplvl.minsize(400,300)
    toplvl.maxsize(400,300)

    canvas = Canvas(toplvl, bg="#ffe993", width=420, height=320)
    canvas.pack()

    img = PhotoImage(file="Tree.png")

    canvas.create_image(10, 10, anchor=NW, image=img)

    
    canvas.create_text(125, 25, anchor=NW, font = "Haettenschweiler 16", text="ElkaDATO ver. 1.0", fill="#000000")
    canvas.create_text(125, 70, anchor=NW, font = "Haettenschweiler 16", text="–û—Å–Ω–æ–≤–∞ - ElkaDATOKernel 'FT' 1.2, \nPSB Notepad ver. 2.0", fill="#000000")
    canvas.create_text(125, 140, anchor=NW, font = "Haettenschweiler 16", text="–í—Å–µ –ø—Ä–∞–≤–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, \n–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤—Å–µ–º \n—É–ø—Ä–∞–≤–ª–µ–Ω—Ü–∞–º –Å–ª–æ—á–Ω—ã—Ö –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤ –∏ \n–ø—Ä–æ—Å—Ç–æ –ª—é–¥—è–º", fill="#000000")
    canvas.create_text(10, 250, anchor=NW, font = "Haettenschweiler 16", text="PSB ent., elkaDATO¬©, 2025", fill="#000000")


    toplvl.attributes("-toolwindow", 1)

    toplvl.mainloop()

def exit_session():
    if msg.askyesno("–®–∏—Ñ—Ä–æ–≤—â–∏–∫ elkaDATO", "–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É? –í—Å–µ –Ω–µ—Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É—Ç–µ—Ä—è–Ω—ã!"):
        msg.showinfo("–®–∏—Ñ—Ä–æ–≤—â–∏–∫ elkaDATO", "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
        tk.destroy()
        sys.exit(0)
    else:
        msg.showinfo("–®–∏—Ñ—Ä–æ–≤—â–∏–∫ elkaDATO", "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –æ—Ç–º–µ–Ω–µ–Ω–æ")
        

menubar = Menu(tk)

filemenu = Menu(menubar, tearoff=0)
filemenu.add_command(label="–°–æ–∑–¥–∞—Ç—å —à–∏—Ñ—Ä", command=file_create)

filemenu2 = Menu(menubar, tearoff=0)
filemenu2.add_command(label="–û—Ç–∫—Ä—ã—Ç—å —à–∏—Ñ—Ä...", command=open_file)

filemenu3 = Menu(menubar, tearoff=0)
filemenu3.add_command(label="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —à–∏—Ñ—Ä", command=save_file)
filemenu3.add_command(label="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —à–∏—Ñ—Ä –∫–∞–∫...", command=save_file_as)

filemenu5 = Menu(menubar, tearoff=0)
filemenu5.add_command(label="–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –≤ –Ω–æ–≤–æ–º —Å—Ç–∏–ª–µ", command=shiphering)
filemenu5.add_command(label="–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –≤ –Ω–æ–≤–æ–º —Å—Ç–∏–ª–µ", command=deshiphering)

filemenu_about = Menu(menubar, tearoff=0)
filemenu_about.add_command(label="–û —à–∏—Ñ—Ä–∞—Ç–æ—Ä–µ", command=about)
filemenu_about.add_command(label="–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é", command=exit_session)


menubar.add_cascade(label="–°–æ–∑–¥–∞—Ç—å...", menu=filemenu)
menubar.add_cascade(label="–û—Ç–∫—Ä—ã—Ç—å...", menu=filemenu2)
menubar.add_cascade(label="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å...", menu=filemenu3)
menubar.add_cascade(label="–®–∏—Ñ—Ä...", menu=filemenu5)
menubar.add_cascade(label="–®–∏—Ñ—Ä–∞—Ç–æ—Ä", menu=filemenu_about)

text_zone = Text(tk, bg = "#ffe993", font = ("Haettenschweiler", 20, "normal"))
text_zone.pack(expand = YES, fill = BOTH, side = LEFT)
scrollbar = ttk.Scrollbar(tk, orient=VERTICAL, command=text_zone.yview)
scrollbar.pack(fill=Y, side=RIGHT)
text_zone['yscrollcommand'] = scrollbar.set

tk.attributes("-toolwindow", 1)
tk.config(menu=menubar)
tk.mainloop()
